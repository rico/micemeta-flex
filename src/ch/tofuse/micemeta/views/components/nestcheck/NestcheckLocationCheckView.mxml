<?xml version="1.0" encoding="utf-8"?>
<components:AbstractComponentView xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  xmlns:inputs="ch.tofuse.micemeta.views.inputs.*"
						  xmlns:buttons="ch.tofuse.micemeta.views.buttons.*"
						  xmlns:components="ch.tofuse.micemeta.views.components.*"
						  xmlns:litter="ch.tofuse.micemeta.views.components.litter.*" 
						  xmlns:nestcheck="ch.tofuse.micemeta.views.components.nestcheck.*">
	
	<fx:Metadata>
		[Event(name="closeLocationCheck", type="ch.tofuse.micemeta.events.NestcheckViewEvent")]
	</fx:Metadata>
	
	<components:states>
		<s:State name="boxAdd" stateGroups="box" />
		<s:State name="boxEdit" stateGroups="box" />
		<s:State name="boxView" stateGroups="box" />
		<s:State name="OtherLocationAdd" stateGroups="otherLocation"/>
		<s:State name="OtherLocationEdit" stateGroups="otherLocation" />
		<s:State name="OtherLocationView" stateGroups="otherLocation" />
	</components:states>
	
	<fx:Script>
		<![CDATA[
			import ch.tofuse.micemeta.config.LayoutConfig;
			import ch.tofuse.micemeta.entities.BoxCheckEntity;
			import ch.tofuse.micemeta.entities.ILocationCheck;
			import ch.tofuse.micemeta.entities.LitterEntity;
			import ch.tofuse.micemeta.entities.MouseEntity;
			import ch.tofuse.micemeta.entities.NestCheckEntity;
			import ch.tofuse.micemeta.entities.OtherLocationCheckEntity;
			import ch.tofuse.micemeta.events.AutoCompleteListEvent;
			import ch.tofuse.micemeta.events.NestcheckViewEvent;
			import ch.tofuse.micemeta.skins.input.DisabledTextInputSkin;
			import ch.tofuse.micemeta.utils.MouseUtils;
			
			import mx.collections.ArrayCollection;
			
			import org.davekeen.flextrine.orm.IEntityRepository;
			
			[Bindable] public var nestcheck:NestCheckEntity;
			
			[Bindable] private var _boxRepository:IEntityRepository;
			[Bindable] private var _otherLocationRepository:IEntityRepository;
			[Bindable] private var _activeMice:ArrayCollection;
			[Bindable] private var _locationCheck:ILocationCheck;
			
			private var _boxCheck:BoxCheckEntity;
			private var _otherLocationCheck:OtherLocationCheckEntity;
			
			public function get locationCheck():ILocationCheck
			{
				return _locationCheck;
			}
			
			public function set locationCheck(value:ILocationCheck):void
			{
				if( value ) {
					
					_locationCheck = value; 
					
					if( value is BoxCheckEntity ) {
						boxCheck = BoxCheckEntity( value );
					} else if( value is OtherLocationCheckEntity ) {
						otherLocationCheck = OtherLocationCheckEntity( value );
					}	
				}
			}
			
			public function set activeMice( data:ArrayCollection ):void
			{
				_activeMice = data;
			}
			
			[Bindable(Event="modeChanged")]
			override public function get mode():String
			{
				
				if( currentState == 'boxEdit' || currentState == 'otherLocationEdit' ) {
					return "edit";
				}
				
				if( currentState == 'boxAdd' || currentState == 'otherLocationAdd' ) {
					return "add";
				}
				
				return 'view';
			}
			
			[Inspectable(category="General",type="String", defaultValue="view",enumeration="view, edit, add")]
			override public function set mode(value:String):void
			{
				_mode = value;
				
				switch( _mode ) {
					case "view":
						boxCheck != null ? currentState == 'boxView' : currentState == 'otherLocationView';
					break;
					
					case "edit":
						boxCheck != null  ? currentState == 'boxEdit' : currentState == 'otherLocationEdit';
						break;
					
					case "add":
						boxCheck != null  ? currentState == 'boxAdd' : currentState == 'otherLocationAdd';
						break;
				}
				
				dispatchEvent( new Event("modeChanged") );
			}
			
			public function get boxCheck():BoxCheckEntity
			{
				return _boxCheck;
			}

			public function set boxCheck(value:BoxCheckEntity):void
			{
				_boxCheck = value;
				currentState = "boxView";
				
				location.label = "Box " + _boxCheck.box.id;
				itemFormLabel.text = "Box Check Details";
				
				mode = _mode;
			}

			public function get otherLocationCheck():OtherLocationCheckEntity
			{
				return _otherLocationCheck;
			}

			public function set otherLocationCheck(value:OtherLocationCheckEntity):void
			{
				_otherLocationCheck = value;
				currentState = "otherLocationView";
				
				location.label = _otherLocationCheck.otherLocation.code;
				itemFormLabel.text = "Other Location Check Details";
				
				non_transpondered.numericValue = _locationCheck.non_transpondered;
				sub_adults.numericValue = _locationCheck.sub_adults;
				pups.numericValue = _locationCheck.pups;
				pups_age.numericValue = _locationCheck.pups_age;
				pups_male_alive.numericValue = _locationCheck.pups_male_alive;
				pups_male_dead.numericValue = _locationCheck.pups_male_dead;
				pups_female_alive.numericValue = _locationCheck.pups_female_alive;
				pups_female_dead.numericValue = _locationCheck.pups_female_dead;
				pups_unknown_alive.numericValue = _locationCheck.pups_unknown_alive;
				pups_unknown_dead.numericValue = _locationCheck.pups_unknown_dead;
				communal.selected = _locationCheck.communal;
				remark.text = _locationCheck.remark;
				
				mode = _mode;
				
			}
			
			private function saveCheck():void
			{
				_locationCheck.non_transpondered = non_transpondered.numericValue;
				_locationCheck.sub_adults = sub_adults.numericValue;
				_locationCheck.pups = pups.numericValue;
				_locationCheck.pups_age = pups_age.numericValue;
				_locationCheck.pups_male_alive = pups_male_alive.numericValue;
				_locationCheck.pups_male_dead = pups_male_dead.numericValue;
				_locationCheck.pups_female_alive = pups_female_alive.numericValue;
				_locationCheck.pups_female_dead = pups_female_dead.numericValue;
				_locationCheck.pups_unknown_alive = pups_unknown_alive.numericValue;
				_locationCheck.pups_unknown_dead = pups_unknown_dead.numericValue;
				_locationCheck.new_litter = false;
				for each ( var litter:LitterEntity in _locationCheck.litters ) {
					if( litter.first_found_date.getTime() == nestcheck.checkdate.getTime() ) {
						_locationCheck.new_litter = true;
						break;
					}
					
				}
				
				_locationCheck.communal = communal.selected;
				_locationCheck.remark = remark.text;
				
			}
			
			private function close():void
			{
				saveCheck();
				dispatchEvent( new NestcheckViewEvent( NestcheckViewEvent.CLOSE_LOCATION_CHECK, _locationCheck) );
			}
			
			/* TRANSPONDERS */
			private function transpondersListFilterFunction( mouse:MouseEntity ):Boolean
			{
				if( transponders_list.data.getItemIndex( mouse ) == -1 ) {
					return true;
				}
				
				return false;
			}
			
			private function removeTransponder( e:AutoCompleteListEvent ):void
			{
				_locationCheck.mice.removeItem( MouseEntity( e.item ) );
				
			}
			
			private function addTransponder( e:AutoCompleteListEvent ):void
			{
				_locationCheck.mice.addItem( MouseEntity( e.item ) );
				
			}
			
		]]>
	</fx:Script>
						  
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<components:layout>
		<s:VerticalLayout gap="0" />
	</components:layout>
	
	<s:Label id="itemFormLabel" text="Check Details" styleName="sectionLabel" />
	
	<mx:Form id="addEditForm" styleName="addEditForm" defaultButton="{doneButton}">
		<s:Label text="Location" 
				 styleName="formItemlabel" 
				 left="{LayoutConfig.FORM_ITEM_LABEL_LEFT}"
				 verticalAlign="top"/>
		<mx:Spacer height="5" />
		
		<mx:FormItem id="location" />
	</mx:Form> 
	
	<mx:Form styleName="addEditForm">
		<s:Label text="Adults / Subadults" 
				 styleName="formItemlabel" 
				 left="{LayoutConfig.FORM_ITEM_LABEL_LEFT}"
				 verticalAlign="top"/>
		<mx:Spacer height="5" />
		
		<mx:FormItem label="transponders" >
			<inputs:AutoCompleteList id="transponders_list" 
									 labelFunction="{MouseUtils.mouseLabelFunction}"
									 filterFunction="transpondersListFilterFunction"
									 width="100"
									 data="{_locationCheck.mice}"
									 listData="{_activeMice}" 
									 itemRemoved="{removeTransponder( event )}"
									 itemAdded="{addTransponder( event )}"
									 field="id"/>
		</mx:FormItem>
		
		<mx:FormItem label="non transpondered" >
			<inputs:NumericTextInput id="non_transpondered"/>	
		</mx:FormItem>
		
		<mx:FormItem label="Subadults" >
			<inputs:NumericTextInput id="sub_adults"/>	
		</mx:FormItem>
		
	</mx:Form>
		
	<mx:Form styleName="addEditForm">
		<s:Label text="Pups" 
				 styleName="formItemlabel" 
				 left="{LayoutConfig.FORM_ITEM_LABEL_LEFT}"
				 verticalAlign="top"/>
		<mx:Spacer height="5" />
		
		<mx:FormItem label="pups age">
			<s:HGroup verticalAlign="middle" gap="10">
				<inputs:NumericTextInput id="pups_age" maxChars="3" widthInChars="3" />
				<s:Label text="(in days)" styleName="inputInfoLabel" />
			</s:HGroup>
			
		</mx:FormItem>
		
		<mx:FormItem label="number of pups">
			<inputs:NumericTextInput id="pups" enabled="false" skinClass="ch.tofuse.micemeta.skins.input.DisabledTextInputSkin"
									 numericValue="{ pups_male_alive.numericValue + pups_male_dead.numericValue + pups_female_alive.numericValue + pups_female_dead.numericValue + pups_unknown_alive.numericValue + pups_unknown_dead.numericValue }"/>
		</mx:FormItem>
		
		<mx:FormItem label="pups male alive">
			<inputs:NumericTextInput id="pups_male_alive" />
		</mx:FormItem>
		
		<mx:FormItem label="pups male dead">
			<inputs:NumericTextInput id="pups_male_dead" />
		</mx:FormItem>
		
		<mx:FormItem label="pups female alive">
			<inputs:NumericTextInput id="pups_female_alive" />
		</mx:FormItem>
		
		<mx:FormItem label="pups female dead">
			<inputs:NumericTextInput id="pups_female_dead" />
		</mx:FormItem>
		
		<mx:FormItem label="pups unknown gender alive">
			<inputs:NumericTextInput id="pups_unknown_alive" />
		</mx:FormItem>
		
		<mx:FormItem label="pups unknown gender dead">
			<inputs:NumericTextInput id="pups_unknown_dead" />
		</mx:FormItem>
		
	</mx:Form>
		
	<mx:Form styleName="addEditForm">
		<s:Label text="Litters" 
				 styleName="formItemlabel" 
				 left="{LayoutConfig.FORM_ITEM_LABEL_LEFT}"
				 verticalAlign="top"/>
		<mx:Spacer height="5" />
		<mx:FormItem>
			<nestcheck:NestcheckLitterView id="litters" nestcheck="{nestcheck}" mode="{_mode}" locationCheck="{_locationCheck}"/>
		</mx:FormItem>
	</mx:Form>
	
	<mx:Form styleName="addEditForm">
		<s:Label text="General" 
				 styleName="formItemlabel" 
				 left="{LayoutConfig.FORM_ITEM_LABEL_LEFT}"
				 verticalAlign="top"/>
		<mx:Spacer height="5" />
		<mx:FormItem label="Nest open"
					 includeIn="box">
			<s:CheckBox id="nest_open" />	
		</mx:FormItem>
		
		<mx:FormItem label="communal">
			<s:CheckBox id="communal" />
		</mx:FormItem>
		
		<mx:FormItem label="remark">
			<s:TextArea id="remark" widthInChars="30" heightInLines="5" top="10"/>	
		</mx:FormItem>
		
	</mx:Form>	
	
	<buttons:IconButton id="doneButton" label="done" click="close()"
						iconUp="@Embed(source='ch/tofuse/micemeta/assets/img/done.png')"/>
	
	
</components:AbstractComponentView>
