<?xml version="1.0" encoding="utf-8"?>
<components:ComponentBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  xmlns:components="ch.tofuse.micemeta.views.components.*"
						  creationComplete="build()" xmlns:inputs="ch.tofuse.micemeta.views.inputs.*" xmlns:buttons="ch.tofuse.micemeta.views.buttons.*">
	<fx:Script>
		<![CDATA[
			import ch.tofuse.micemeta.entities.BoxCheck;
			import ch.tofuse.micemeta.entities.Litter;
			import ch.tofuse.micemeta.entities.LitterCheck;
			import ch.tofuse.micemeta.entities.OtherLocationCheck;
			
			import org.davekeen.flextrine.orm.IEntityRepository;
			
			private var _litter:Litter;
			private var _boxCheck:BoxCheck;
			private var _otherLocationCheck:OtherLocationCheck;

			private function build():void
			{
				repository = em.getRepository( Litter );
			}
			
			public function get litter():Litter
			{
				return _litter;
			}
			
			public function get otherLocationCheck():OtherLocationCheck
			{
				return _otherLocationCheck;
			}
			
			public function set otherLocationCheck(value:OtherLocationCheck):void
			{
				if( value ) {
					_otherLocationCheck = value;
					_boxCheck = null;
				}
			}
			
			public function get boxCheck():BoxCheck
			{
				return _boxCheck;
			}
			
			public function set boxCheck(value:BoxCheck):void
			{
				if( value ) {
					_boxCheck = value;
					_otherLocationCheck = null;
				}
			}
			
			override protected function addNewLitter( event:Event ):void
			{
				_litter = new Litter();
				_litter.identifier = new_litter_id.text;
				_litter.first_found_age = int( new_litter_age.text );
				_litter.first_found_date = new Date();
				
				em.persist( _litter );
				
				//addLitter( l );
				em.flush();
				proposeLitterIdentifier();
			}
			
			private function addExistingLitter( event:Event ):void
			{
				var l:Litter = litters_list.selectedItem as Litter;
				//addLitter( l );
				em.flush();
			}
			
			/*private function addLitter( l:Litter ):void
			{
			// litter check
			var lc:LitterCheck = new LitterCheck();
			lc.checkdate = _nestcheck.checkdate;
			lc.remark = existing_litter_remark.text;
			
			_litterManager.litterCheckManager.addEntity( lc, false );
			
			l.litterChecks.addItem( lc );
			
			//_nestcheckManager.save();
			}*/
			
			private function deleteLitter( event:Event ):void
			{
				em.remove( Litter(event.target.data) );
				em.flush();
			}
			
			private function proposeLitterIdentifier():void
			{
				var proposedLitterIdentifier:String = litterIdentifierDateFormatter.format( new Date() );
				
				if( currentState == "boxCheck" ) {
					proposedLitterIdentifier = proposedLitterIdentifier.concat( Box(_currentLocation).id );
				}else if( currentState == "otherLocationCheck" ) {
					proposedLitterIdentifier = proposedLitterIdentifier.concat( OtherLocation(_currentLocation).code );
				}
				
				var i:uint = 1;
				
				while( repository.findOneBy( { identifier: proposedLitterIdentifier } ) != null ) {
					proposedLitterIdentifier = proposedLitterIdentifier.concat( "_" + i.toString() );
					i++;
				}
				
				new_litter_id.text = proposedLitterIdentifier;
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:DateFormatter id="litterIdentifierDateFormatter" formatString="YYYYMMDD" />
	</fx:Declarations>
	
	<components:states>
		<s:State name="boxCheck" />
		<s:State name="otherLocationCheck" />
	</components:states>
	
	<components:layout>
		<s:VerticalLayout gap="10" />
	</components:layout>
	
	<!-- new litter -->
	<s:VGroup gap="10" >
		
		<s:Label text="Add New Litter" styleName="formPartHeaderLabel"/>
		
		<s:HGroup gap="10" verticalAlign="middle">
			<s:Label text="identifier" width="60" textAlign="right"/>
			<s:TextInput id="new_litter_id" widthInChars="12" creationComplete="{proposeLitterIdentifier()}"/>
		</s:HGroup>	
		
		<s:HGroup gap="10" verticalAlign="middle">
			<s:Label text="age" width="60" textAlign="right"/>
			<inputs:NumericTextInput id="new_litter_age" maxChars="3" widthInChars="3"/>
			<s:Label text="(in days)" styleName="inputInfoLabel"/>
		</s:HGroup>	
		
		<s:HGroup gap="10" verticalAlign="middle">
			<s:Label text="remark" width="60" textAlign="right"/>
			<s:TextInput id="new_litter_remark" widthInChars="30" />
		</s:HGroup>	
		
		<s:Group width="100%">
			<buttons:IconButton label="Add"
								click="addNewLitter()"
								iconUp="@Embed(source='ch/tofuse/micemeta/assets/img/add.png')" 
								height="22"
								enabled="{(new_litter_age.text != '') &amp;&amp; (new_litter_id.text != '') }"
								left="70"/>	
		</s:Group>
	</s:VGroup>
	
	
	
	<!-- existing litter -->
	<s:VGroup gap="10">
		
		<s:Label text="Add Existing Litter" styleName="formPartHeaderLabel" />
		
		
		<s:HGroup gap="10" verticalAlign="middle">
			<s:Label text="litter" width="60" textAlign="right"/>
			<inputs:AutoCompleteList id="litters_list" 
									 mode="select"
									 requireSelection="true"
									 showGrid="false"
									 listData="{repository.entities}" 
									 field="identifier"
									 left="70"
									 creationComplete="{addEventListener( 'itemAdded', addExistingLitter )}"/>	
		</s:HGroup>
		
		<s:HGroup gap="10" verticalAlign="middle">
			<s:Label text="remark" width="60" textAlign="right"/>
			<s:TextArea id="existing_litter_remark" widthInChars="30" heightInLines="5"/>
		</s:HGroup>	
		
	</s:VGroup>
	
	<mx:Spacer height="10" />
	
	<!-- added litters -->
	<s:VGroup gap="10" verticalAlign="top"
			  includeInLayout="{repository.entities.length > 0}"
			  visible="{repository.entities.length > 0}">
		
		<s:Label text="Added Litters" styleName="formPartHeaderLabel"/>
		
		<mx:DataGrid id="litters" dataProvider="{repository.entities}"
					 rowCount="{repository.entities.length}"
					 variableRowHeight="true"
					 wordWrap="true"
					 sortableColumns="false"
					 editable="false"
					 creationComplete="{ litters.addEventListener( 'deleteItem', deleteLitter ) }">
			
			<mx:columns>
				<mx:DataGridColumn headerText="identifier" dataField="identifier"/>
				<mx:DataGridColumn headerText="age (in days)" labelFunction="{LitterHelpers.calculateLitterAgeLabelFunction}" />
				<!-- <mx:DataGridColumn headerText="remark" dataField="remark" /> -->
				<mx:DataGridColumn itemRenderer="ch.tofuse.micemeta.views.renderers.DeleteItemWithoutConfirmRenderer" width="30" />
			</mx:columns>
		</mx:DataGrid>							
	</s:VGroup>	
	
</components:ComponentBase>
