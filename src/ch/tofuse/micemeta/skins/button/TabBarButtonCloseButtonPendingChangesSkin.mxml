<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
			 alpha.disabled="1">
    
    <!-- host component -->
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
		
        ]]>
    </fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			
			[Bindable] private var _pendingChanges:Boolean;
			
			public function set pendingChanges( pc:Boolean ):void
			{
				trace("pending changes => " + pc);
			}
			
		]]>
	</fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" stateGroups="normal" />
        <s:State name="over" stateGroups="normal"/>
        <s:State name="down" stateGroups="normal"/>
        <s:State name="disabled" stateGroups="normal"/>
		<s:State name="pendingChangesUp" stateGroups="pendingChanges" />
		<s:State name="pendingChangesOver" stateGroups="pendingChanges" />
		<s:State name="pendingChangesDown" stateGroups="pendingChanges" />
    </s:states>
    
	<!-- transitions -->
	<s:transitions>
		<s:Transition fromState="up" toState="over">
			<s:Parallel duration="250">
				<s:AnimateColor target="{circleFill}" />
				<s:Animate target="{innerCircleFill}">
					<s:SimpleMotionPath property="alpha" />
				</s:Animate>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="over" toState="up">
			<s:Parallel duration="250">
				<s:AnimateColor target="{circleFill}" />
				<s:Animate target="{innerCircleFill}">
					<s:SimpleMotionPath property="alpha" />
				</s:Animate>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	
	<!-- circle -->
	<!-- circle -->
	<s:Ellipse width="10" height="10">
		<s:fill>
			<s:SolidColor id="circleFill" color="#333333"  />
		</s:fill>
	</s:Ellipse>
	
	<!-- inner circle -->
	<s:Ellipse width="4" height="4" x="3" y="3">
		<s:fill>
			<s:SolidColor id="innerCircleFill" color="#ffffff" alpha=".75" />
		</s:fill>
	</s:Ellipse>
	
</s:SparkSkin>
